head(20) %>%
select(-total_wins) %>%
print() %>%
gather(location_win, score, -teamname) %>%
print() %>%
ggplot(aes(x=teamname, y=score, fill=location_win)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
theme_minimal() +
scale_fill_brewer(name = "Location", labels = c("Away game", "Home game"), palette="Set2") +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="", y="Percentage")
#proportion home wins vs away wins, Does home offers a good advantage for some teams over others
joined_df %>%
select(teamname, home_wins, away_wins, total_wins) %>%
arrange(desc(total_wins)) %>%
head(20) %>%
select(-total_wins) %>%
print() %>%
gather(location_win, score, -teamname) %>%
print() %>%
ggplot(aes(x=teamname, y=score, fill=location_win)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
theme_minimal() +
scale_fill_brewer(name = "", labels = c("Away game", "Home game"), palette="Set2") +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="", y="Percentage")
#proportion home wins vs away wins, Does home offers a good advantage for some teams over others
joined_df %>%
select(teamname, home_wins, away_wins, total_wins) %>%
arrange(desc(total_wins)) %>%
head(20) %>%
select(-total_wins) %>%
print() %>%
gather(location_win, score, -teamname) %>%
print() %>%
ggplot(aes(x=teamname, y=score, fill=location_win)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
theme_minimal() +
scale_fill_brewer(name = "", labels = c("Away game", "Home game"), palette="Set2") +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Win ratios home games vs away games", y="Percentage")
#now we need to determine the proportion of wins vs game played for each country
#to use position fill need to gather data into two columns
joined_df %>%
mutate(total_loss= total_games-total_wins) %>%
select(teamname, total_loss, total_wins) %>%
arrange(desc(total_wins)) %>%
head(20) %>%
print() %>%
gather(result, score, -teamname) %>%
print() %>%
ggplot(aes(x=teamname, y=score, fill=result)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
theme_minimal() +
scale_fill_brewer(name = "", labels = c("loss", "win"), palette="Set1") +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Win ratios for top 20 countries with most wins", y="Percentage")
#do the countries win with big score gap, make box plot
#winning score gap and losing score gap
home_team_wins <- my_data %>%
mutate(score_gap=`Home Team Goals`- `Away Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Home Team Name`, score_gap) %>%
rename(teamname= `Home Team Name`) %>%
print()
away_team_wins <- my_data %>%
mutate(score_gap=`Away Team Goals`- `Home Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Away Team Name`, score_gap) %>%
rename(teamname= `Away Team Name`) %>%
print()
total_gap <- rbind(away_team_wins, home_team_wins)
total_gap
#remove countries with only 1 game
countries_count <- total_gap %>%
group_by(teamname) %>%
count(sort=T) %>%
filter(n>5) %>%
print()
total_gap %>%
right_join(countries_count, by="teamname") %>%
ggplot() +
geom_boxplot( aes(x=fct_reorder(as.factor(teamname), score_gap , mean), y=score_gap), outlier.shape = NA, alpha=0.5) +
coord_flip() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Win ratios home games vs away games", y="Percentage")
#do the countries win with big score gap, make box plot
#winning score gap and losing score gap
home_team_wins <- my_data %>%
mutate(score_gap=`Home Team Goals`- `Away Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Home Team Name`, score_gap) %>%
rename(teamname= `Home Team Name`) %>%
print()
away_team_wins <- my_data %>%
mutate(score_gap=`Away Team Goals`- `Home Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Away Team Name`, score_gap) %>%
rename(teamname= `Away Team Name`) %>%
print()
total_gap <- rbind(away_team_wins, home_team_wins)
total_gap
#remove countries with only 1 game
countries_count <- total_gap %>%
group_by(teamname) %>%
count(sort=T) %>%
filter(n>5) %>%
print()
total_gap %>%
right_join(countries_count, by="teamname") %>%
ggplot() +
geom_boxplot( aes(x=fct_reorder(as.factor(teamname), score_gap , mean), y=score_gap), outlier.shape = NA, alpha=0.5) +
coord_flip() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Score gaps for match winners", y="Score difference")
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
head(my_data)
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio) %>%
print()
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio) %>%
print()
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio)) +
geom_bar(stat = "identity") +
coord_flip() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Win ratios home games vs away games", y="Percentage")
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
head(my_data)
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio) %>%
print()
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio) %>%
print()
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio, fill=)) +
geom_bar(stat = "identity") +
coord_flip() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Half time score ratio for winning games", y="Percentage")
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
head(my_data)
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio) %>%
print()
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio) %>%
print()
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio, fill=)) +
geom_bar(stat = "identity") +
coord_flip() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Half time score ratio for winning games", y="Percentage") +
theme_classic()
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
head(my_data)
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio) %>%
print()
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio) %>%
print()
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio, fill=)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Half time score ratio for winning games", y="Percentage") +
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
head(my_data)
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio) %>%
print()
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio) %>%
print()
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio, fill=)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Half time score ratio for winning games", y="Percentage")
#proportion home wins vs away wins, Does home offers a good advantage for some teams over others
joined_df %>%
select(teamname, home_wins, away_wins, total_wins) %>%
arrange(desc(total_wins)) %>%
head(20) %>%
select(-total_wins) %>%
print() %>%
gather(location_win, score, -teamname) %>%
print() %>%
ggplot(aes(x=teamname, y=score, fill=location_win)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
theme_minimal() +
scale_fill_brewer(name = "", labels = c("Away game", "Home game"), palette="Set2") +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Win ratios home games vs away games", y="Percentage")
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
head(my_data)
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio)
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio)
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio, fill=)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Half time score ratio for winning games", y="Percentage")
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio)
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio)
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio, fill=)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Half time score ratio for winning games", y="Percentage")
#do the countries win with big score gap, make box plot
#winning score gap and losing score gap
home_team_wins <- my_data %>%
mutate(score_gap=`Home Team Goals`- `Away Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Home Team Name`, score_gap) %>%
rename(teamname= `Home Team Name`)
away_team_wins <- my_data %>%
mutate(score_gap=`Away Team Goals`- `Home Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Away Team Name`, score_gap) %>%
rename(teamname= `Away Team Name`)
total_gap <- rbind(away_team_wins, home_team_wins)
total_gap
#remove countries with only 1 game
countries_count <- total_gap %>%
group_by(teamname) %>%
count(sort=T) %>%
filter(n>5) %>%
print()
total_gap %>%
right_join(countries_count, by="teamname") %>%
ggplot() +
geom_boxplot( aes(x=fct_reorder(as.factor(teamname), score_gap , mean), y=score_gap), outlier.shape = NA, alpha=0.5) +
coord_flip() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Score advantage for match winners", y="Score difference")
library(tidyverse)
library(RColorBrewer)
my_data <- read_csv("https://raw.githubusercontent.com/reisanar/datasets/master/WorldCupMatches.csv")
head(my_data)
#city with most games played in
my_data %>%
filter(!is.na(City)) %>%
group_by(City) %>%
count(sort=T) %>%
head(10) %>%
ggplot(aes(x=fct_reorder(City, n), y=n, fill=City)) +
geom_bar(stat="identity") +
coord_flip() +
theme_classic() +
theme(legend.position="none", axis.title.y=element_blank())+
labs(title="Top 10 cities for hosting world cup since 1930", y="Total number")
#number of games plays by each county
games_played_home <- my_data %>%
select(`Home Team Name`, `Home Team Goals`, `Away Team Goals`) %>%
group_by(`Home Team Name`) %>%
summarise(games=n(), wins=sum(`Home Team Goals` > `Away Team Goals`)) %>%
rename(teamname=`Home Team Name`, home_games=games, home_wins=wins) %>%
print()
games_played_away <- my_data %>%
select(`Away Team Name`, `Home Team Goals`, `Away Team Goals`) %>%
group_by(`Away Team Name`) %>%
summarise(games=n(), wins=sum(`Home Team Goals` > `Away Team Goals`)) %>%
rename(teamname=`Away Team Name`, away_games = games, away_wins = wins) %>%
print()
joined_df <- inner_join(games_played_away, games_played_home, by="teamname") %>%
mutate(total_games = away_games+home_games, total_wins=away_wins+home_wins) %>%
filter(!is.na(teamname))
joined_df
joined_df %>%
arrange(desc(total_wins)) %>%
head(20)  %>%
ggplot(aes(x=fct_reorder(teamname, total_wins), y=total_wins, color=teamname)) +
geom_pointrange(aes(ymin = 0, ymax = total_wins)) +
#geom_bar(stat = "identity")+
coord_flip() +
theme_minimal() +
guides(color = FALSE) +
theme(legend.position="none", axis.title.y=element_blank())+
labs(title="Top 20 countries with most wins", y="Total number")
#now we need to determine the proportion of wins vs game played for each country
#to use position fill need to gather data into two columns
joined_df %>%
mutate(total_loss= total_games-total_wins) %>%
select(teamname, total_loss, total_wins) %>%
arrange(desc(total_wins)) %>%
head(20) %>%
print() %>%
gather(result, score, -teamname) %>%
print() %>%
ggplot(aes(x=teamname, y=score, fill=result)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
theme_minimal() +
scale_fill_brewer(name = "", labels = c("loss", "win"), palette="Set1") +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Win ratios for top 20 countries with most wins", y="Percentage")
#proportion home wins vs away wins, Does home offers a good advantage for some teams over others
joined_df %>%
select(teamname, home_wins, away_wins, total_wins) %>%
arrange(desc(total_wins)) %>%
head(20) %>%
select(-total_wins) %>%
print() %>%
gather(location_win, score, -teamname) %>%
print() %>%
ggplot(aes(x=teamname, y=score, fill=location_win)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
theme_minimal() +
scale_fill_brewer(name = "", labels = c("Away game", "Home game"), palette="Set2") +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Win ratios home games vs away games", y="Percentage")
#do the countries win with big score gap, make box plot
#winning score gap and losing score gap
home_team_wins <- my_data %>%
mutate(score_gap=`Home Team Goals`- `Away Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Home Team Name`, score_gap) %>%
rename(teamname= `Home Team Name`)
away_team_wins <- my_data %>%
mutate(score_gap=`Away Team Goals`- `Home Team Goals`) %>%
filter(score_gap > 0) %>%
select(`Away Team Name`, score_gap) %>%
rename(teamname= `Away Team Name`)
total_gap <- rbind(away_team_wins, home_team_wins)
total_gap
#remove countries with only 1 game
countries_count <- total_gap %>%
group_by(teamname) %>%
count(sort=T) %>%
filter(n>5) %>%
print()
total_gap %>%
right_join(countries_count, by="teamname") %>%
ggplot() +
geom_boxplot( aes(x=fct_reorder(as.factor(teamname), score_gap , mean), y=score_gap), outlier.shape = NA, alpha=0.5) +
coord_flip() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Score advantage for match winners", y="Score difference")
#how does score at half time affects the result
#which teams tends to have better first half performance over second half
#need to remove those that have 0 scores total games
#based on winning games
#winning team's performance on the first half of the game
game_scores <- my_data %>%
mutate(home_score_ratio= (`Half-time Home Goals` / `Home Team Goals`)*100, away_score_ratio =(`Half-time Away Goals` / `Away Team Goals`)*100) %>%
replace(is.na(.), 0) %>%
select(`Home Team Name`, `Away Team Name`, home_score_ratio, away_score_ratio, `Home Team Goals`, `Away Team Goals`) %>%
print()
home_game_data <- game_scores %>%
filter(`Home Team Goals` > `Away Team Goals`) %>%
select(`Home Team Name`, home_score_ratio) %>%
rename(teamname=`Home Team Name`, first_half_score_ratio = home_score_ratio)
away_game_data <- game_scores %>%
filter(`Home Team Goals` < `Away Team Goals`) %>%
select(`Away Team Name`, away_score_ratio) %>%
rename(teamname=`Away Team Name`, first_half_score_ratio = away_score_ratio)
total_data <- rbind(home_game_data, away_game_data) %>%
right_join(countries_count, by="teamname")
total_data %>%
group_by(teamname) %>%
summarise(avg_half_time_ratio=mean(first_half_score_ratio)) %>%
ggplot(aes(x=fct_reorder(teamname, avg_half_time_ratio), y=avg_half_time_ratio, fill=)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank(), legend.position = "top")+
labs(title="Half time score ratio for winning games", y="Percentage")
